name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual trigger

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Grant execute permission for gradlew
      run: chmod +x final_apk/gradlew
      
    - name: Create gradlew if missing
      run: |
        cd final_apk
        if [ ! -f gradlew ]; then
          gradle wrapper
        fi
    
    - name: Build Debug APK
      run: |
        cd final_apk
        ./gradlew assembleDebug --stacktrace
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: whispersphere-debug-apk
        path: final_apk/app/build/outputs/apk/debug/*.apk
        retention-days: 30
    
    - name: Upload APK as Release Asset (if tagged)
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: final_apk/app/build/outputs/apk/debug/app-debug.apk
        asset_name: WhisperSphere-Android.apk
        asset_content_type: application/vnd.android.package-archive
