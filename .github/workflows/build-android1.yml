name: Build WhisperSphere Android APK

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Android SDK
      run: |
        # Download Android command line tools
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
        unzip -q commandlinetools-linux-11076708_latest.zip
        
        # Setup Android SDK directory
        mkdir -p $HOME/android-sdk/cmdline-tools
        mv cmdline-tools $HOME/android-sdk/cmdline-tools/latest
        
        # Set environment variables
        export ANDROID_HOME=$HOME/android-sdk
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
        
        # Accept licenses and install required packages
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"
        
        # Add to GitHub environment for next steps
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
    
    - name: Cache Gradle Dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Setup Project
      run: |
        cd final_apk
        
        # Create Gradle wrapper
        gradle wrapper --gradle-version 8.0
        chmod +x gradlew
        
        # Create gradle.properties
        cat > gradle.properties << EOF
        android.useAndroidX=true
        android.enableJetifier=true
        org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
        org.gradle.daemon=false
        EOF
    
    - name: Build APK
      run: |
        cd final_apk
        ./gradlew assembleDebug --stacktrace
    
    - name: Find and Display APK
      run: |
        echo "🔍 Looking for APK files..."
        find final_apk -name "*.apk" -type f -exec ls -la {} \;
        
        APK_FILE=$(find final_apk -name "app-debug.apk" -type f | head -1)
        if [ -f "$APK_FILE" ]; then
          echo "✅ APK found: $APK_FILE"
          echo "📦 Size: $(du -h "$APK_FILE" | cut -f1)"
        else
          echo "❌ APK not found"
        fi
    
    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: WhisperSphere-Android-APK
        path: final_apk/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
    
    - name: Upload All APKs (backup)
      uses: actions/upload-artifact@v4
      with:
        name: All-APK-Files
        path: final_apk/**/*.apk
        retention-days: 30
